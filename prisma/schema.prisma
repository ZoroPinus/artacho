// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  MEMBER
}

enum DocumentType {
  PDF
  Docx
  PNG
  JPEG
  XLSX
}

model User {
  id            String    @id @map("_id")
  name          String?   @unique
  email         String?   @unique
  idType        String?
  idNo          String?
  emailVerified DateTime?
  image         String?
  password      String?
  gender        String?
  address       String?
  phone         String?
  age           Int?
  loggedInAt    DateTime?
  role          UserRole  @default(MEMBER)
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @default(now()) @updatedAt @map("updated_at")
}

model Document {
  id          String       @id @default(cuid()) @map("_id")
  idNo        String
  memberName  String
  fileName    String
  description String?
  fileUrl     String
  fileType    DocumentType @default(PDF)
  adminId     String
  uploadedAt  DateTime     @default(now()) @map("uploaded_at")
}

model Certificate {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  barangay String
  date     String
  day      String
  month    String
}

model FinancialStatement {
  id                          String                 @id @default(auto()) @map("_id") @db.ObjectId
  date                        String
  total                       String
  tithesTotal                 String
  thanksgivingOfferingTotal   String
  birthdayOfferingTotal       String
  looseOfferingsTotal         String
  sundayschoolOfferingTotal   String
  adultsundayOfferingTotal    String
  childrensundayOfferingTotal String
  tithes                      Tithes[]
  thanksgivingOffering        ThanksgivingOffering[]
  birthdayOffering            BirthdayOffering[]
  others                      Other[]
  summary                     Summary[]
}

model Tithes {
  id                   String              @id @default(auto()) @map("_id") @db.ObjectId
  title                String
  amount               String
  financialStatement   FinancialStatement? @relation(fields: [financialStatementId], references: [id])
  financialStatementId String              @db.ObjectId
}

model ThanksgivingOffering {
  id                   String              @id @default(auto()) @map("_id") @db.ObjectId
  title                String
  amount               String
  financialStatement   FinancialStatement? @relation(fields: [financialStatementId], references: [id])
  financialStatementId String              @db.ObjectId
}

model BirthdayOffering {
  id                   String              @id @default(auto()) @map("_id") @db.ObjectId
  title                String
  amount               String
  financialStatement   FinancialStatement? @relation(fields: [financialStatementId], references: [id])
  financialStatementId String              @db.ObjectId
}

model Other {
  id                   String              @id @default(auto()) @map("_id") @db.ObjectId
  title                String
  amount               String
  financialStatement   FinancialStatement? @relation(fields: [financialStatementId], references: [id])
  financialStatementId String              @db.ObjectId
}

model Summary {
  id                   String              @id @default(auto()) @map("_id") @db.ObjectId
  title                String
  amount               String
  financialStatement   FinancialStatement? @relation(fields: [financialStatementId], references: [id])
  financialStatementId String              @db.ObjectId
}

model BaptismCertificate {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  pastorInCharge String
  father         String
  mother         String
  baptismDate    String
  baptizedBy     String
  birthDate      String
  birthPlace     String
  day            String
  month          String
  sponsors       Sponsor[]
}

model Sponsor {
  id                   String              @id @default(auto()) @map("_id") @db.ObjectId
  name                 String
  baptismCertificate   BaptismCertificate? @relation(fields: [baptismCertificateId], references: [id])
  baptismCertificateId String              @db.ObjectId
}
